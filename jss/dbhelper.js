class DBHelper{static get DATABASE_URL(){return"http://localhost:1337/restaurants"}static fetchRestaurants(e){fetch(DBHelper.DATABASE_URL).then(e=>e.json()).then(t=>{e(null,t)}).catch(function(t){return e(`Request failed. Returned status of ${t}.`,null)})}static fetchRestaurantById(e,t){DBHelper.fetchRestaurants((n,r)=>{if(n)t(n,null);else{const n=r.find(t=>t.id==e);n?t(null,n):t("Restaurant does not exist",null)}})}static fetchRestaurantByCuisine(e,t){DBHelper.fetchRestaurants((n,r)=>{if(n)t(n,null);else{const n=r.filter(t=>t.cuisine_type==e);t(null,n)}})}static fetchRestaurantByNeighborhood(e,t){DBHelper.fetchRestaurants((n,r)=>{if(n)t(n,null);else{const n=r.filter(t=>t.neighborhood==e);t(null,n)}})}static fetchRestaurantByCuisineAndNeighborhood(e,t,n){DBHelper.fetchRestaurants((r,a)=>{if(r)n(r,null);else{let r=a;"all"!=e&&(r=r.filter(t=>t.cuisine_type==e)),"all"!=t&&(r=r.filter(e=>e.neighborhood==t)),n(null,r)}})}static fetchNeighborhoods(e){DBHelper.fetchRestaurants((t,n)=>{if(t)e(t,null);else{const t=n.map((e,t)=>n[t].neighborhood),r=t.filter((e,n)=>t.indexOf(e)==n);e(null,r)}})}static fetchCuisines(e){DBHelper.fetchRestaurants((t,n)=>{if(t)e(t,null);else{const t=n.map((e,t)=>n[t].cuisine_type),r=t.filter((e,n)=>t.indexOf(e)==n);e(null,r)}})}static urlForRestaurant(e){return`./restaurant.html?id=${e.id}`}static imageUrlForRestaurant(e){return`/img/${e.photograph.small}`}static imageUrlForRestaurant_responsive(e){return`/img/${e.photograph.respons}`}static imageUrlForRestaurant_sizes(e){return`${e.photograph.sizes}`}static getRestaurantsforIndexedDB(e){dbPromise=idb.open("restaurant-reviews",1,function(e){e.createObjectStore("restaurants",{keyPath:"name"});var t=e.transaction.objectStore("restaurants");t.createIndex("cuisine_type","cuisine_type"),t.createIndex("neighborhood","neighborhood"),t.createIndex("name","name")}),dbPromise.then(function(t){var n=t.transaction("restaurants","readwrite"),r=n.objectStore("restaurants");return Promise.all(e.map(function(e){return console.log("Adding item: ",e),r.add(e)})).catch(function(e){n.abort(),console.log(e)}).then(function(){console.log("All items added successfully!")})})}static mapMarkerForRestaurant(e,t){return new google.maps.Marker({position:e.latlng,title:e.name,url:DBHelper.urlForRestaurant(e),map:t,animation:google.maps.Animation.DROP})}}